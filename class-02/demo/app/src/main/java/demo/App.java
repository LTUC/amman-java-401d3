/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import java.util.*;

public class App {

    public static void main(String[] args) {

        // casting
        // number types
        // int , double , float, short , long
        // byte < short < int < long < float < double
        byte xByte = 5;
        short xShort = 5;
        int xInt = 5;
        long xLong = 5;

        xByte = (byte)xInt;
        xInt = xByte;


        float xFloat = 5;
        double xDouble = 5;

        System.out.println("xByte ..." + xByte);
        System.out.println("xFloat ..." + xFloat);


        int age = 21;
        // declare an array
        int []ages;
        //int ages[];

        // declare and initialize an empty array
        //int []ages = new int[5];   empty array of size 5
        //int ages[] = {1,2,3,4,5};  declare and initialize an array with default values;

        ages = new int[10];
        int index = 0;
        // fill the array with values from 15-24
        for(int i = 15; i <= 24; i++){
            ages[index] = i;
            System.out.println("ages["+index+"] = "+ages[index]);
            index++;
        }

        // primitive types and objects
        int primitiveInt = 14;

        // Integer wrapperInt = 14;
        Integer wrapperInt = new Integer("14");


        System.out.println("the primitive int ... " + primitiveInt);
        System.out.println("the wrapper int ... " + wrapperInt);

        // arrays are limited in size

        List<String> namesList = new ArrayList<String>();


        namesList.add("Aseel");
        namesList.add("Ahmad");
        namesList.add("Dawood");
        namesList.add("Humam");
        namesList.add("Osama");
        namesList.add("Maram");
        namesList.add("Humam");

        // foreach
        System.out.println("Print arraylist content with foeach");
        // name of the list .for .....
        for (String i: namesList) {
            System.out.println(i);
        }
        System.out.println("Does my list contain the name Maram?" + namesList.contains("Maram"));

        System.out.println("Print arraylist content with a regular for");
        namesList.remove("Maram");
        //namesList.remove(0);
        for (int i = 0; i < namesList.size(); i++) {

            System.out.println(namesList.get(i));
        }
        System.out.println("Does my list contain the name Maram?" + namesList.contains("Maram"));
//
//        ArrayList<String> names = new ArrayList<String>();
//        names.addAll(namesList);

        // arraylists keep the order, allow duplicates, we can add to them and remove from them ...

        Set<Integer> set = new HashSet<Integer>();

        set.add(1);
        set.add(3);
        set.add(5);
        set.add(1);

        for (Integer integer : set) {
            System.out.println(integer);
        }

        // sets are collections that don't allow duplicates

        // Student ID and Student Name
        HashMap<Integer,String> studentsIds = new HashMap<Integer,String>();
        studentsIds.put(5,"Baraa");
        studentsIds.put(6,"Haneen");
        studentsIds.put(7,"Mohammad");
        studentsIds.put(8,"Victoria");

        // get the value with key 7

        // first way to loop over the map ...
        for(Integer i: studentsIds.keySet()){
            System.out.println("Key: "+i + " Value: "+ studentsIds.get(i));
        }

        // another way ....
        for(Map.Entry<Integer,String> entry : studentsIds.entrySet()){
            System.out.println("Key: "+ entry.getKey() + " , value:"+entry.getValue());
        }

        studentsIds.put(7,"Ali");
        for(Map.Entry<Integer,String> entry : studentsIds.entrySet()){
            System.out.println("Key: "+ entry.getKey() + " , value:"+entry.getValue());
        }


    }
}
