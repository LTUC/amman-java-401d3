/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        String apiuRL = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        // send a request of type Get
        // 1- create a url object - to open a connection
        try {
            URL url = new URL(apiuRL);
            getContentFromURL(url);
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
    }

    public static String getContentFromURL (URL url){
        HttpURLConnection connection = null;
        String content = null;
        try {
            connection  = connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status = connection.getResponseCode();
            if(status == 200){
                BufferedReader bufferedReader = getBufferedReader(connection);
                content = getContentFromBufferedReader(bufferedReader);
                bufferedReader.close();
            } else{
                System.out.println("An error occurred with status "+status);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if(connection != null) {
                connection.disconnect();
            }
        }

        return content;

    }

    private static BufferedReader getBufferedReader(HttpURLConnection connection) throws IOException {
        InputStream inputStream = connection.getInputStream();
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        return bufferedReader;
    }

    // getContent from BufferedReader
    // return a string
    private static String getContentFromBufferedReader(BufferedReader bufferedReader){
        StringBuilder builder = new StringBuilder();
        String line = null;
        try {
            line = bufferedReader.readLine();
            while(line != null){
                builder.append(line);
                line = bufferedReader.readLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return  builder.toString();
    }

}
